{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../Map.svelte",
    "../Navbar.svelte",
    "../Gagiyoleb.svelte",
    "../Gamiyole.svelte",
    "../Login.svelte",
    "../MapApp.svelte",
    "../Profile.svelte",
    "../ProfileEdit.svelte",
    "../Register.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport { DeviceDetectorService } from \"../services/deviceDetectorService.service\";\nimport { Link } from \"svelte-routing\";\nimport { GoogleService } from '../services/google.service';\nimport { onMount } from \"svelte\";\nimport { navigate } from 'svelte-routing';\n\nconst googleService = GoogleService.getInstance();\nlet container;\nlet map;\nlet zoom = 16;\nlet center = { lat: DeviceDetectorService.latUni, lng: DeviceDetectorService.lngUni };\nlet directionsService;\nlet directionsRenderer;\nlet geoCoder;\nlet count = 0;\nlet startLocation;\nlet endLocation;\nlet marker;\n\n\nonMount(async () => {\n  const url = new URL(location.href);\n  const destination = url.searchParams.get('destination');\n  \n  if(destination) {\n    const res = await googleService.getGeometryForPlace(destination);\n    if(res.candidates.length !== 0) {\n      center = res.candidates[0].geometry.location;\n    }\n  }\n\n  geoCoder = new google.maps.Geocoder();\n  directionsService = new google.maps.DirectionsService();\n  directionsRenderer = new google.maps.DirectionsRenderer();\n  map = new google.maps.Map(container, {\n    zoom,\n    center\n  });\n  marker = new google.maps.Marker({\n      map: map,\n      position: center,\n      draggable: true\n  });\n  window.marker = marker;\n  map.addListener(\"click\", function(mapsMouseEvent) {\n      marker.setPosition(mapsMouseEvent.latLng)\n  });\n  directionsRenderer.setMap(map);\n});\n\nfunction onSubmit() {\n  const url = new URL(location.href);\n  const startTime = url.searchParams.get('startTime');\n  const endTime = url.searchParams.get('endTime');\n  const time = url.searchParams.get('time');\n  const seats = url.searchParams.get('seats');\n  let destination;\n\n  geoCoder.geocode({\n      location: {\n        lat: marker.getPosition().lat(),\n        lng: marker.getPosition().lng()\n      }\n    }, (results, status) => {\n      if (status === \"OK\") {\n        if (results[0]) {\n          console.log(results);\n          destination = results[0].formatted_address;\n          console.log(destination);\n          if(startTime && endTime) {\n            // Came from Gamiyole\n            navigate(`/gamiyole?destination=${destination}&startTime=${startTime}&endTime=${endTime}`);\n          } else {\n            // Came from Gagiyole\n            navigate(`/gagiyoleb?destination=${destination}&time=${time}&seats=${seats}`);\n          }\n        } else {\n          window.alert(\"No results found\");\n        }\n      } else {\n        window.alert(\"Geocoder failed due to: \" + status);\n      }\n  });\n\n}\n\n</script>\n\n<style>\n.full-screen {\n  width: 100vw;\n  height: 90vh;\n}\n</style>\n\n<div class=\"full-screen\" bind:this={container} />\n<button on:click={onSubmit}>Submit</button>\n",
    "<script>\nimport { navigate } from \"svelte-routing\";\nimport { onMount } from \"svelte\";\nimport { AuthService } from \"../services/auth.service\";\n\nconst Routes = [\n    {\n        route: '/login',\n        label: 'Login'\n    },\n    {\n        route: '/profile',\n        label: 'profile'\n    },\n    {\n        route: '/register',\n        label: 'Register'\n    },\n    {\n        route: '/gamiyole',\n        label: 'Gamiyole'\n    },\n    {\n        route: '/gagiyoleb',\n        label: 'Gagiyoleb'\n    }\n];\n\nconst Routes_For_Authenticated_Users =[\n    {\n        route: '/logout',\n        label: 'Logout',\n        isLogout: true\n    },\n    {\n        route: '/profile',\n        label: 'profile'\n    },\n    {\n        route: '/gamiyole',\n        label: 'Gamiyole'\n    },\n    {\n        route: '/gagiyoleb',\n        label: 'Gagiyoleb'\n    }\n]\n\nlet currRoutes = Routes;\nconst authService = AuthService.getInstance();\n\nonMount(async () => {\n    authService.validateTokenAndNavigate().then(res => {\n        if(res) currRoutes = Routes_For_Authenticated_Users;\n        else currRoutes = Routes;\n    });\n});\n\nfunction onNavigate(route) {\n    if (route.isLogout === true){\n        authService.deleteToken();\n        if (authService.getToken() === null) currRoutes = Routes; \n    } else {\n        navigate(route.route);\n    }\n}\n\n</script>\n\n<style>\n.nav-link{\n    cursor: pointer;\n}\n</style>\n\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <span class=\"navbar-brand\" on:click=\"{() => navigate(\"/\")}\">\n      <svg id=\"Layer_3\" style=\"height: 40px; width: 40px; fill: white\" enable-background=\"new 0 0 64 64\" height=\"512\" viewBox=\"0 0 64 64\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m21 51.721-4.923-1.641-1.077.538v2.382h6z\"/><path d=\"m43 59v2h4v-2.101c-.323.066-.658.101-1 .101z\"/><path d=\"m17 58.899v2.101h4v-2h-3c-.342 0-.677-.035-1-.101z\"/><path d=\"m43 51.721v1.279h6v-2.382l-1.077-.538z\"/><path d=\"m41 54v-3c0-.431.275-.812.684-.948l3.155-1.052h-25.678l3.155 1.052c.409.136.684.517.684.948v3c0 .553-.447 1-1 1h-6.816c.414 1.161 1.514 2 2.816 2h28c1.302 0 2.402-.839 2.816-2h-6.816c-.553 0-1-.447-1-1zm-2 1h-14v-2h14z\"/><path d=\"m15.586 47h-2.586v2h.764l2.548-1.274z\"/><path d=\"m47.688 47.726 2.548 1.274h.764v-2h-2.586z\"/><path d=\"m22.789 40.658-3.171 6.342h24.764l-3.171-6.342c-.512-1.022-1.54-1.658-2.683-1.658h-13.056c-1.143 0-2.171.636-2.683 1.658z\"/><path d=\"m34 11v-2c0-1.103-.897-2-2-2s-2 .897-2 2v2c0 1.103.897 2 2 2s2-.897 2-2z\"/><path d=\"m26 18v2.981c.617.465 1.284.865 2 1.178v-3.159h2v3.798c.646.132 1.315.202 2 .202s1.354-.07 2-.202v-3.798h2v3.159c.716-.314 1.383-.713 2-1.178v-2.981c0-1.654-1.346-3-3-3h-6c-1.654 0-3 1.346-3 3z\"/><path d=\"m24 18c0-2.613 2.022-4.74 4.579-4.957-.359-.6-.579-1.294-.579-2.043v-2c0-2.206 1.794-4 4-4s4 1.794 4 4v2c0 .749-.22 1.443-.579 2.043 2.557.217 4.579 2.344 4.579 4.957v.974c1.25-1.669 2-3.733 2-5.974 0-5.514-4.486-10-10-10s-10 4.486-10 10c0 2.241.75 4.305 2 5.974z\"/><path d=\"m9 26v-2c0-2.206 1.794-4 4-4s4 1.794 4 4v2c0 .749-.22 1.443-.579 2.043 2.557.217 4.579 2.344 4.579 4.957v1.974c1.25-1.669 2-3.733 2-5.974 0-5.514-4.486-10-10-10s-10 4.486-10 10c0 2.241.75 4.305 2 5.974v-1.974c0-2.613 2.022-4.74 4.579-4.957-.359-.6-.579-1.294-.579-2.043z\"/><path d=\"m13 39c.685 0 1.354-.07 2-.202v-4.798h2v4.159c.716-.314 1.383-.713 2-1.178v-3.981c0-1.654-1.346-3-3-3h-6c-1.654 0-3 1.346-3 3v3.981c.617.465 1.284.865 2 1.178v-4.159h2v4.798c.646.132 1.315.202 2 .202z\"/><path d=\"m11 24v2c0 1.103.897 2 2 2s2-.897 2-2v-2c0-1.103-.897-2-2-2s-2 .897-2 2z\"/><path d=\"m61 29c0-5.514-4.486-10-10-10s-10 4.486-10 10c0 2.241.75 4.305 2 5.974v-1.974c0-2.613 2.022-4.74 4.579-4.957-.359-.6-.579-1.294-.579-2.043v-2c0-2.206 1.794-4 4-4s4 1.794 4 4v2c0 .749-.22 1.443-.579 2.043 2.557.217 4.579 2.344 4.579 4.957v1.974c1.25-1.669 2-3.733 2-5.974z\"/><path d=\"m54 30h-6c-1.654 0-3 1.346-3 3v3.981c.617.465 1.284.865 2 1.178v-4.159h2v4.798c.646.132 1.315.202 2 .202s1.354-.07 2-.202v-4.798h2v4.159c.716-.314 1.383-.713 2-1.178v-3.981c0-1.654-1.346-3-3-3z\"/><path d=\"m53 26v-2c0-1.103-.897-2-2-2s-2 .897-2 2v2c0 1.103.897 2 2 2s2-.897 2-2z\"/></g></svg>\n    </span>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        {#each currRoutes as route}\n            <li class=\"nav-item\">\n                <span \n                    class=\"{route.isLogout !== undefined ? 'nav-link text-danger' : 'nav-link'}\" \n                    on:click=\"{() => onNavigate(route)}\"\n                >{route.label}</span>\n            </li>\n        {/each}\n      </ul>\n    </div>\n</nav>",
    "<script>\nimport { onMount } from 'svelte';\nimport { DeviceDetectorService } from \"../services/deviceDetectorService.service\";\nimport { GoogleService } from \"../services/google.service\";\nimport { Link } from \"svelte-routing\";\nimport { AuthService } from \"../services/auth.service\";\n\nconst googleService = GoogleService.getInstance();\nconst authService = AuthService.getInstance();\n\nconst dateHours = new Date().getHours();\nconst dateMinutes = new Date().getMinutes();\nlet fromUni,\n  destination = \"\",\n  seats = 1,\n  time =\n    (dateHours < 10 ? \"0\" : \"\") +\n    dateHours +\n    \":\" +\n    (dateMinutes < 10 ? \"0\" : \"\") +\n    dateMinutes;\nlet predictions = [];\nlet clicked = false;\n\n$: {\n  console.log(time);\n}\n\n$: {\n  if(seats <= 1) {\n    seats = 1;\n  }\n}\n\nonMount(async () => {\n  authService.validateTokenAndNavigate().then(res => {\n  });\n\n  const url = new URL(location.href);\n  const timeFromQuery = url.searchParams.get('time');\n  const seatsFromQuery = url.searchParams.get('seats');\n  const destinationFromQuery = url.searchParams.get('destination');\n  console.log('destinationFromQuery', destinationFromQuery);\n\n  if(destinationFromQuery) {\n    destination = destinationFromQuery;\n  }\n  if(timeFromQuery) {\n    time = timeFromQuery;\n  }\n  if(seatsFromQuery) {\n    seats = seatsFromQuery;\n  }\n});\n\n\nif (DeviceDetectorService.isBrowser && window.navigator) {\n  isAtUni();\n}\n\nfunction isAtUni() {\n  let lat, lng;\n  navigator.geolocation.getCurrentPosition((pos) => {\n    lat = pos.coords.latitude;\n    lng = pos.coords.longitude;\n\n    const distanceFromCenter = Math.sqrt(\n      Math.pow(lat - DeviceDetectorService.latUni, 2) +\n        Math.pow(lng - DeviceDetectorService.lngUni, 2)\n    );\n\n    if (distanceFromCenter <= DeviceDetectorService.maxAllowedDist) {\n      fromUni = true;\n    } else {\n      fromUni = false;\n    }\n  });\n}\n\nfunction onSubmit() {\n  console.log(\"submit\");\n}\n\nfunction getAutoCompletedData() {\n  if (DeviceDetectorService.isBrowser) {\n    googleService.getSuggestedPlaces(destination).then((res) => {\n      predictions = res;\n    });\n  }\n}\n</script>\n\n<style type=\"scss\">.wrapper {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nform {\n  width: 350px;\n}\nform .action {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}</style>\n\n<div class=\"wrapper\">\n  <form>\n    <div class=\"form-group\">\n      <label>{fromUni ? 'To' : 'From'}</label>\n      <input\n        bind:value={destination}\n        type=\"search\"\n        class=\"form-control\"\n        placeholder={fromUni ? 'To' : 'From'}\n        on:input={(res) => {\n          getAutoCompletedData();\n          clicked = false;\n        }} />\n    </div>\n    {#if destination !== '' && !clicked}\n      <div>\n        {#each predictions as prediction}\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            value=\"{prediction}/\"\n            readonly\n            on:click={(res) => {\n              destination = prediction;\n              clicked = true;\n            }} />\n        {/each}\n      </div>\n    {/if}\n    <div>\n      {#if destination === ''}\n        <Link to=\"/map?time={time}&seats={seats}\">Pick on Map</Link>\n      {:else}\n        <Link to=\"/map?destination={destination}&time={time}&seats={seats}\">Show on Map</Link>\n      {/if}\n    </div>\n    <div class=\"form-group\">\n      <label>Time</label>\n      <input\n        bind:value={time}\n        type=\"time\"\n        class=\"form-control\"\n        placeholder=\"Time\" />\n    </div>\n    <div class=\"form-group\">\n      <label>Number of Seats</label>\n      <input\n        bind:value={seats}\n        type=\"number\"\n        class=\"form-control\"\n        placeholder=\"Number of Seats\" />\n    </div>\n    <div class=\"action\">\n      <button type=\"button\" class=\"btn btn-primary\" on:click={onSubmit}>\n        Gagiyoleb\n      </button>\n    </div>\n  </form>\n</div>\n",
    "<script>\nimport { onMount } from 'svelte';\nimport { DeviceDetectorService } from \"../services/deviceDetectorService.service\";\nimport { GoogleService } from \"../services/google.service\";\nimport { Link } from 'svelte-routing';\nimport { AuthService } from \"../services/auth.service\";\n\nconst googleService = GoogleService.getInstance();\nconst authService = AuthService.getInstance();\n\nconst dateHours = new Date().getHours();\nconst dateMinutes = new Date().getMinutes();\nlet fromUni,\n  destination = \"\",\n  seats = 1,\n  startTime =\n    (dateHours < 10 ? \"0\" : \"\") +\n    dateHours +\n    \":\" +\n    (dateMinutes < 10 ? \"0\" : \"\") +\n    dateMinutes,\n  endTime =\n    (dateHours < 10 ? \"0\" : \"\") +\n    dateHours +\n    \":\" +\n    (dateMinutes < 10 ? \"0\" : \"\") +\n    dateMinutes;\nlet predictions = [];\nlet clicked = false;\n\n$: {\n  console.log(startTime, endTime);\n}\n\nonMount(async () => {\n  authService.validateTokenAndNavigate().then(res => {\n  });\n\n  const url = new URL(location.href);\n  const startTimeFromQuery = url.searchParams.get('startTime');\n  const endTimeFromQuery = url.searchParams.get('endTime');\n  const destinationFromQuery = url.searchParams.get('destination');\n  console.log('destinationFromQuery', destinationFromQuery);\n\n  if(destinationFromQuery) {\n    destination = destinationFromQuery;\n  }\n  if(startTimeFromQuery) {\n    startTime = startTimeFromQuery;\n  }\n  if(endTimeFromQuery) {\n    endTime = endTimeFromQuery;\n  }\n});\n\nif (DeviceDetectorService.isBrowser && window.navigator) {\n  isAtUni();\n}\n\nfunction isAtUni() {\n  let lat, lng;\n  navigator.geolocation.getCurrentPosition(pos => {\n    lat = pos.coords.latitude;\n    lng = pos.coords.longitude;\n\n    const distanceFromCenter = Math.sqrt(\n      Math.pow(lat - DeviceDetectorService.latUni, 2) +\n        Math.pow(lng - DeviceDetectorService.lngUni, 2)\n    );\n\n    if (distanceFromCenter <= DeviceDetectorService.maxAllowedDist) {\n      fromUni = true;\n    } else {\n      fromUni = false;\n    }\n  });\n}\n\nfunction onSubmit() {\n  console.log(\"submit\");\n}\n\nfunction getAutoCompletedData() {\n  if (DeviceDetectorService.isBrowser) {\n    googleService.getSuggestedPlaces(destination).then(res => {\n      predictions = res;\n    });\n  }\n}\n</script>\n\n<style type=\"scss\">.wrapper {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nform {\n  width: 350px;\n}\nform .action {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}</style>\n\n<div class=\"wrapper\">\n  <form>\n    <div class=\"form-group\">\n      <label>{fromUni ? 'To' : 'From'}</label>\n      <input\n        bind:value={destination}\n        type=\"search\"\n        class=\"form-control\"\n        placeholder={fromUni ? 'To' : 'From'}\n        on:input={res => {\n          getAutoCompletedData();\n          clicked = false;\n        }} />\n    </div>\n    {#if destination !== '' && !clicked}\n      <div>\n        {#each predictions as prediction}\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            value=\"{prediction}/\"\n            readonly\n            on:click={res => {\n              destination = prediction;\n              clicked = true;\n            }} />\n        {/each}\n      </div>\n    {/if}\n    <div>\n      {#if destination === ''}\n        <Link to=\"/map?startTime={startTime}&endTime={endTime}\">Pick on Map</Link>\n        {:else}\n        <Link to=\"/map?destination={destination}&startTime={startTime}&endTime={endTime}\">Show on Map</Link>\n      {/if}\n    </div>\n    <div class=\"form-group\">\n      <label>From</label>\n      <input\n        bind:value={startTime}\n        type=\"time\"\n        class=\"form-control\"\n        placeholder=\"From\" />\n    </div>\n    <div class=\"form-group\">\n      <label>To</label>\n      <input\n        bind:value={endTime}\n        type=\"time\"\n        class=\"form-control\"\n        placeholder=\"To\" />\n    </div>\n    <div class=\"action\">\n      <button type=\"button\" class=\"btn btn-primary\" on:click={onSubmit}>\n        Gamiyole\n      </button>\n    </div>\n  </form>\n</div>\n",
    "<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onMount } from 'svelte';\nimport { Link, navigate } from \"svelte-routing\";\nimport { AuthService } from '../services/auth.service';\nlet submitClicked = false;\nlet loginError = false;\nlet email = '', password = '';\nconst authService = AuthService.getInstance();\nonMount(() => {\n    authService.deleteToken();\n});\nfunction isValidInputs() {\n    return (email.length >= 6 && email.length <= 64) &&\n        (password.length >= 6 && password.length <= 64) &&\n        authService.emailRegex.test(email);\n}\nfunction onKeyup(event) {\n    if (event.keyCode === 13) {\n        onSubmit();\n    }\n}\nfunction onSubmit() {\n    return __awaiter(this, void 0, void 0, function* () {\n        submitClicked = true;\n        if (isValidInputs) {\n            let res = yield authService.login(email, password);\n            if (!res.error) {\n                authService.setToken(res.token);\n                navigate('/');\n            }\n            else {\n                loginError = true;\n            }\n        }\n    });\n}\n</script>\n\n<style type=\"scss\">.wrapper {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nform {\n  width: 350px;\n}\nform .action {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}</style>\n\n<div class=\"wrapper\">\n    <form>\n        <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Email address</label>\n            <input bind:value={email} type=\"email\" class=\"form-control\" \n                id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" on:keyup=\"{onKeyup}\">\n            {#if email.length === 0 && submitClicked}\n                <span class=\"error text-danger\">Email is required*</span> \n            {/if}\n            {#if email.length !== 0 && email.length < 6 && submitClicked}\n                <span class=\"error text-danger\">Email is too short*</span> \n            {/if}\n            {#if email.length > 64 && submitClicked}\n                <span class=\"error text-danger\">Email is too long*</span> \n            {/if}\n            {#if email.length >= 6 && email.length <= 64 && !authService.emailRegex.test(email) && submitClicked}\n                <span class=\"error text-danger\">Email is not valid*</span> \n            {/if}\n        </div>\n        <div class=\"form-group\">\n            <label for=\"exampleInputPassword1\">Password</label>\n            <input bind:value={password} type=\"password\" class=\"form-control\" \n                id=\"exampleInputPassword1\" placeholder=\"Password\" on:keyup=\"{onKeyup}\">\n            {#if password.length === 0 && submitClicked}\n                <span class=\"error text-danger\">Password is required*</span> \n            {/if}\n            {#if password.length !== 0 && password.length < 6 && submitClicked}\n                <span class=\"error text-danger\">Password is too short*</span> \n            {/if}\n            {#if password.length > 64 && submitClicked}\n                <span class=\"error text-danger\">Password is too long*</span> \n            {/if}\n        </div>\n        {#if loginError && isValidInputs()}\n                <span class=\"error text-danger\">Email or Password is wrong*</span> \n        {/if}\n        <div class=\"action\">\n            <Link class=\"already\" to=\"/register\">\n                Not Registered Yet?\n            </Link>\n            <button type=\"button\" class=\"btn btn-primary\" on:click=\"{onSubmit}\">Login</button>\n        </div>\n    </form>\n</div>",
    "<script>\nimport { onMount } from 'svelte';\nimport { DeviceDetectorService } from \"../services/deviceDetectorService.service\";\nimport Map from \"../components/Map.svelte\";\nimport { GoogleService } from \"../services/google.service\";\nimport { AuthService } from \"../services/auth.service\";\n\nconst authService = AuthService.getInstance();\n\nlet isInitMap = false;\n\nonMount(async () => {\n  authService.validateTokenAndNavigate().then(res => {\n  });\n});\n\nif(DeviceDetectorService.isBrowser) {\n  for(let i=0; i<10; i++) {\n    setTimeout(() => {\n      isInitMap = window.isInitMap\n    }, i*100);\n  }\n}\n\n</script>\n\n<style>\n:global(body) {\n  padding: 0;\n}\n</style>\n\n\n{#if DeviceDetectorService.isBrowser && isInitMap}\n  <Map />\n{/if}\n",
    "<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onMount } from \"svelte\";\nimport { AuthService } from \"../services/auth.service\";\nimport { ProfileService } from \"../services/profile.service\";\nimport { navigate } from \"svelte-routing\";\nimport { DeviceDetectorService } from '../services/deviceDetectorService.service';\nconst authService = AuthService.getInstance();\nlet isOwn;\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\n    authService.validateTokenAndNavigate().then(res => {\n    });\n}));\nif (DeviceDetectorService.isBrowser) {\n    const qEmail = new URLSearchParams(window.location.search).get(\"email\");\n    isOwn = qEmail === null ? true : false;\n}\nconst profileService = ProfileService.getInstance();\n</script>\n\n<style type=\"text/scss\">.btn {\n  margin-top: 50px;\n}</style>\n\n<div class=\"container\">\n    <h1>Profile</h1>\n    <hr>\n    <div class=\"row\">\n        {#await profileService.getUserProfile(authService)}\n            <img src=\"/gifs/spinner.gif\" alt=\"\" style=\"margin: auto\">\n        {:then profile}\n            <!-- left column -->\n            <div class=\"col-md-3\">\n            <div >\n                <img src=\"//placehold.it/100\" class=\"avatar img-circle\" alt=\"avatar\">\n            </div>\n                {#if isOwn}\n                    <input type=\"submit\" class=\"btn btn-primary\" on:click=\"\" value=\"Edit brofile\">\n                {/if}\n            </div>\n            \n            <!-- edit form column -->\n            <div class=\"col-md-9 personal-info\">\n                <h3>Personal info</h3>\n                <div class=\"row\">\n                    <div class=\"col-lg-2\">First name:</div>\n                    <div class=\"col-lg-6\">{profile.name}</div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-2\">Last name:</div>\n                    <div class=\"col-lg-6\">{profile.surname}</div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-2\">Email:</div>\n                    <div class=\"col-lg-6\">{profile.email}</div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-2\">Age:</div>\n                    <div class=\"col-lg-6\">{profile.age}</div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-2\">Phone:</div>\n                    <div class=\"col-lg-6\">{profile.phone}</div>\n                </div>\n            </div>\n        \n        {:catch error}\n            <p>An error occurred!</p>\n        {/await}\n    </div>\n</div>\n\n",
    "<script lang=\"typescript\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onMount } from \"svelte\";\nimport { AuthService } from \"../services/auth.service\";\nimport { ProfileService } from \"../services/profile.service\";\nimport { navigate } from \"svelte-routing\";\nconst authService = AuthService.getInstance();\nlet profile = {\n    name: '',\n    phone: '',\n    email: '',\n    age: 0,\n    surname: ''\n};\nlet profileSnapShot;\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\n    authService.validateTokenAndNavigate().then(res => {\n    });\n    profile = yield profileService.getUserProfile(authService);\n    profileSnapShot = Object.assign({}, profile);\n}));\nconst profileService = ProfileService.getInstance();\nfunction saveChanges() {\n    profileService.updateUserProfile(profile, authService).then(() => console.log('he'));\n}\nfunction reset() {\n    profile = Object.assign({}, profileSnapShot);\n}\n</script>\n\n<style type=\"text/scss\">.row {\n  margin: 20px 0;\n}</style>\n\n<div class=\"container\">\n    <h1>Profile</h1>\n    <hr>\n    <div class=\"row\">\n        <!-- left column -->\n        <div class=\"col-md-3\">\n        <div class=\"text-center\">\n            <img src=\"//placehold.it/100\" class=\"avatar img-circle\" alt=\"avatar\">\n        </div>\n        </div>\n        \n        <!-- edit form column -->\n        <div class=\"col-md-9 personal-info\">\n            <h3>Personal info</h3>\n            <form role=\"form\" on:submit|preventDefault={saveChanges}>\n                <div class=\"row\">\n                    <div class=\"col-lg-2\">First name:</div>\n                    <div class=\"col-lg-6\">\n                        <input class=\"form-control\" type=\"text\" bind:value=\"{profile.name}\">\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-2\">Last name:</div>\n                    <div class=\"col-lg-6\">\n                        <input class=\"form-control\" type=\"text\" bind:value=\"{profile.surname}\">\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-2\">Email:</div>\n                    <div class=\"col-lg-6\">{profile.email}</div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-2\">Age:</div>\n                    <div class=\"col-lg-6\">{profile.age}</div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-2\">Phone:</div>\n                    <div class=\"col-lg-6\">\n                        <input class=\"form-control\" type=\"text\" bind:value=\"{profile.phone}\">\n                    </div>\n                </div>\n                <div class=\"col-md-8\">\n                    <input type=\"submit\" class=\"btn btn-primary\" value=\"Save Changes\">\n                    <span></span>\n                    <input type=\"reset\" on:click=\"{() => reset()}\" class=\"btn btn-default\" value=\"Cancel\">\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n\n",
    "<script>\nimport { onMount } from 'svelte';\nimport { Link, navigate } from \"svelte-routing\";\nimport { AuthService } from '../services/auth.service';\n\nlet submitClicked = false;\nlet registerError = false;\nlet name = '', surname = '', email = '', password1 = '', password2 = '';\n\nconst authService = AuthService.getInstance();\n\nonMount(() => {\n    authService.deleteToken();\n});\n\n\nfunction isValidInputs() {\n    return (name.length >= 2 && name.length <= 32) &&\n        (surname.length >= 2 && surname.length <= 32) &&\n        (email.length >= 6 && email.length <= 64) &&\n        authService.emailRegex.test(email) &&\n        (password1.length >= 6 && password1.length <= 64) &&\n        password1 === password2;\n}\n\nfunction onKeyup(event) {\n    if(event.keyCode === 13){\n        onSubmit();\n    }\n}\n\nasync function onSubmit() {\n    submitClicked = true;\n    if(isValidInputs()) {\n        let res = await authService.register(name, surname, email, password1);\n        if(!res.error) {\n            authService.setToken(res.token);\n            navigate('/');\n        } else {\n            registerError = true;\n        }\n    }\n}\n</script>\n\n<style type=\"scss\">.wrapper {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nform {\n  width: 350px;\n}\nform .action {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\nform .text-danger {\n  font-size: 13px;\n  font-style: italic;\n}</style>\n\n<div class=\"wrapper\">\n    <form>\n        <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Name</label>\n            <input bind:value={name} type=\"text\" class=\"form-control\" \n                id=\"exampleInputName\" placeholder=\"Enter name\" on:keyup=\"{onKeyup}\">\n            {#if name.length === 0 && submitClicked}\n                <span class=\"error text-danger\">Name is required*</span> \n            {/if}\n            {#if name.length !== 0 && name.length < 2 && submitClicked}\n                <span class=\"error text-danger\">Name is too short*</span> \n            {/if}\n            {#if name.length > 32 && submitClicked}\n                <span class=\"error text-danger\">Name is too long*</span> \n            {/if}\n        </div>\n        <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Surname</label>\n            <input bind:value={surname} type=\"text\" class=\"form-control\" \n                id=\"exampleInputSurname\" placeholder=\"Enter surname\" on:keyup=\"{onKeyup}\">\n            {#if surname.length === 0 && submitClicked}\n                <span class=\"error text-danger\">Surname is required*</span> \n            {/if}\n            {#if surname.length !== 0 && surname.length < 2 && submitClicked}\n                <span class=\"error text-danger\">Surname is too short*</span> \n            {/if}\n            {#if surname.length > 32 && submitClicked}\n                <span class=\"error text-danger\">Surname is too long*</span> \n            {/if}\n        </div>\n        <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Email address</label>\n            <input bind:value={email} type=\"email\" class=\"form-control\" \n                id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" on:keyup=\"{onKeyup}\">\n            {#if email.length === 0 && submitClicked}\n                <span class=\"error text-danger\">Email is required*</span> \n            {/if}\n            {#if email.length !== 0 && email.length < 6 && submitClicked}\n                <span class=\"error text-danger\">Email is too short*</span> \n            {/if}\n            {#if email.length > 64 && submitClicked}\n                <span class=\"error text-danger\">Email is too long*</span> \n            {/if}\n            {#if email.length >= 6 && email.length <= 64 && !authService.emailRegex.test(email) && submitClicked}\n                <span class=\"error text-danger\">Email is not valid*</span> \n            {/if}\n        </div>\n        <div class=\"form-group\">\n            <label for=\"exampleInputPassword1\">Password</label>\n            <input bind:value={password1} type=\"password\" class=\"form-control\" \n                id=\"exampleInputPassword1\" placeholder=\"Password\" on:keyup=\"{onKeyup}\">\n            {#if password1.length === 0 && submitClicked}\n                <span class=\"error text-danger\">Password is required*</span> \n            {/if}\n            {#if password1.length !== 0 && password1.length < 6 && submitClicked}\n                <span class=\"error text-danger\">Password is too short*</span> \n            {/if}\n            {#if password1.length > 64 && submitClicked}\n                <span class=\"error text-danger\">Password is too long*</span> \n            {/if}\n        </div>\n        <div class=\"form-group\">\n            <label for=\"exampleInputPassword1\">Confirm Password</label>\n            <input bind:value={password2} type=\"password\" class=\"form-control\" \n                id=\"exampleInputPassword2\" placeholder=\"Password\" on:keyup=\"{onKeyup}\">\n            {#if password2.length === 0 && submitClicked}\n                <span class=\"error text-danger\">Please confirm password*</span> \n            {/if}\n            {#if password2.length !== 0 && password1 !== password2 && submitClicked}\n                <span class=\"error text-danger\">Passwords do not match*</span> \n            {/if}\n        </div>\n        {#if registerError && isValidInputs()}\n                <span class=\"error text-danger\">Email already exists*</span> \n        {/if}\n        <div class=\"action\">\n            <Link class=\"already\" to=\"/login\">\n                Already Registered?\n            </Link>\n            <button type=\"button\" class=\"btn btn-primary\" on:click=\"{onSubmit}\">Register</button>\n        </div>\n    </form>\n</div>"
  ],
  "names": [],
  "mappings": "AA0FA,YAAY,eAAC,CAAC,AACZ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,AACd,CAAC;ACvBD,wBAAS,CAAC,AACN,MAAM,CAAE,OAAO,AACnB,CAAC;ACoBkB,QAAQ,4BAAC,CAAC,AAC3B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,IAAI,4BAAC,CAAC,AACJ,KAAK,CAAE,KAAK,AACd,CAAC,AACD,kBAAI,CAAC,OAAO,cAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,AACrB,CAAC;AChBkB,QAAQ,4BAAC,CAAC,AAC3B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,IAAI,4BAAC,CAAC,AACJ,KAAK,CAAE,KAAK,AACd,CAAC,AACD,kBAAI,CAAC,OAAO,cAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,AACrB,CAAC;AC5DkB,QAAQ,4BAAC,CAAC,AAC3B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,IAAI,4BAAC,CAAC,AACJ,KAAK,CAAE,KAAK,AACd,CAAC,AACD,kBAAI,CAAC,OAAO,cAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,AACrB,CAAC;AClCO,IAAI,AAAE,CAAC,AACb,OAAO,CAAE,CAAC,AACZ,CAAC;ACFuB,IAAI,cAAC,CAAC,AAC5B,UAAU,CAAE,IAAI,AAClB,CAAC;ACQuB,IAAI,cAAC,CAAC,AAC5B,MAAM,CAAE,IAAI,CAAC,CAAC,AAChB,CAAC;ACMkB,QAAQ,8BAAC,CAAC,AAC3B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,IAAI,8BAAC,CAAC,AACJ,KAAK,CAAE,KAAK,AACd,CAAC,AACD,mBAAI,CAAC,OAAO,eAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,mBAAI,CAAC,YAAY,eAAC,CAAC,AACjB,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,AACpB,CAAC"
}